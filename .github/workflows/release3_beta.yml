name: Beta Release V2.7

on:
  push:
    branches:
      - development
    paths-ignore:
      - '.github/workflows/release3_beta.yml'  # Ignore changes in the workflow file itself
  workflow_dispatch:

jobs:
  build_beta:
    name: Create Beta Release

    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment:
          # - esp32dev
          # - esp32dev_OLED
          # - TTGO_TDISPLAY
          - TTGO_TDISPLAY_SANDWICH
          # - TDISPLAY_S3
          # - esp32dev_ST7789_240x320

    env:
      CHIP_FAMILY: ${{ matrix.environment == 'TDISPLAY_S3_beta' && 'ESP32-S3' || 'ESP32' }}

    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Show environments
        run: |
          echo

      - name: Determine chipFamily
        id: determine_chip_family
        run: |
          case "${{ matrix.environment }}" in
          "esp32dev_beta")
            CHIP_FAMILY="ESP32";;
          "TDISPLAY_S3_beta")
            CHIP_FAMILY="ESP32-S3";;
          # Add more cases for other environments as needed
          *)
            CHIP_FAMILY="UNKNOWN";;
          esac
          echo "::set-output name=chipFamily::${CHIP_FAMILY}"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U platformio
          platformio update

      - name: Get the version
        id: get_version
        run: |
          # Get the version from the commit message
          commit_message=$(git log --format=%B -n 1 $GITHUB_SHA)
          version_regex="Beta v([0-9]+\.[0-9]+\.[0-9]+)"
          if [[ $commit_message =~ $version_regex ]]; then
            version=${BASH_REMATCH[1]}
            echo "::set-output name=VERSION::${version}"
          else
            echo "Commit message does not contain version information."
            exit 1
          fi

      - name: Create Git tag
        if: success()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git tag -a "v${{ steps.get_version.outputs.VERSION }}-beta" -m "Beta Release v${{ steps.get_version.outputs.VERSION }}"

      - name: Push Git tag
        if: success()
        run: |
          git push origin "v${{ steps.get_version.outputs.VERSION }}-beta"

      - name: Show version
        run: echo ${{ steps.get_version.outputs.VERSION }}

      - name: Get current date
        id: date
        run: |
          echo "::set-output name=date::$(date +'%d-%m-%Y')"
          echo "::set-output name=time::$(date +'%H:%M:%S')"

      - name: Create beta manifest file
        id: create_betamanifest
        run: |
          # Define offset values based on env.CHIP_FAMILY
          if [[ "${{ env.CHIP_FAMILY }}" == "ESP32-S3" ]]; then
            bootloader_offset=0
            partitions_offset=32768
            app0_offset=57344
            firmware_offset=65536
            spiffs_offset=13172736
          else
            # Default values for ESP32 or other environments
            bootloader_offset=4096
            partitions_offset=32768
            app0_offset=57344
            firmware_offset=65536
            spiffs_offset=3997696
          fi

          # Create beta manifest
          echo "{" > ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"name\": \"${{ github.event.repository.name }}-${{ matrix.environment }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"flavour\": \"${{ matrix.environment }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"version\": \"${{ steps.get_version.outputs.VERSION }}-beta\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"compilation_date\": \"${{ steps.date.outputs.date }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"compilation_time\": \"${{ steps.date.outputs.time }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"new_install_prompt_erase\": true," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"new_install_improv_wait_time\": 20," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  \"builds\": [" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "      {" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "        \"chipFamily\": \"${{ env.CHIP_FAMILY }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "        \"improv\": true," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "        \"parts\": [" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "          { \"path\": \"${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-bootloader.bin\", \"offset\": $bootloader_offset }," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "          { \"path\": \"${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-partitions.bin\", \"offset\": $partitions_offset }," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "          { \"path\": \"${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-firmware.bin\", \"offset\": $firmware_offset }," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "          { \"path\": \"${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-spiffs.bin\", \"offset\": $spiffs_offset }" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "        ]" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "      }" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "  ]" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "}" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "::set-output name=betamanifest::$(cat ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json)"

      - name: Read beta manifest files
        run:  |
          echo "Beta Manifest:"
          echo ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json
          echo "Beta Manifest file contents read with cat:"
          cat ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json

      - name: Copy beta manifest files
        run: |            
          mkdir ./beta_firmware      
          cp ${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json ./beta_firmware/${{ github.event.repository.name }}-${{ matrix.environment }}.beta.manifest.json

      - name: Build beta firmware file
        run: |
          pio run -e ${{ matrix.environment }}

      - name: Copy beta firmware files
        run: |
          cp .pio/build/${{ matrix.environment }}/bootloader.bin ./beta_firmware/${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-bootloader.bin
          cp .pio/build/${{ matrix.environment }}/partitions.bin  ./beta_firmware/${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-partitions.bin
          cp .pio/build/${{ matrix.environment }}/firmware.bin    ./beta_firmware/${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-firmware.bin

      - name: Build beta spiffs file
        run: |
          pio run -e ${{ matrix.environment }} -t buildfs

      - name: Copy beta spiffs files
        run: |
          ls -la ./beta_firmware
          cp .pio/build/${{ matrix.environment }}/spiffs.bin    ./beta_firmware/${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}-spiffs.bin

      - name: Create Beta Release
        id: create_beta_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-beta
          files: |
            ./beta_firmware/*.bin
            ./beta_firmware/*.json
          draft: false
          prerelease: true
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          CHIP_FAMILY: ${{ env.CHIP_FAMILY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸ“‚ Sync beta files - FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          LOCAL_DIR: ./beta_firmware/
          REMOTE_DIR: /${{ github.event.repository.name }}/beta/
          METHOD: ftp
          PORT: 21
          ARGS: --verbose
          
      - name: Clean eMariete.com Cache
        # run: curl https://emariete.com/clean_cache_wp_rocket.php
        run: curl https://emariete.com/clean_cache_litespeed.php

